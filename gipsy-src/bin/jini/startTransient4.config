/* Configuration file for starting the first Javaspace Service, requiring httpd, reggie, outrigger and mahalo */

import com.sun.jini.config.ConfigUtil;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start
{
	private static host = ConfigUtil.getHostName();
	private static port = "8080";
    private static policy = "./start.policy";

	private static codebaseURI = "http://" + host + ":" + port + "/";
	private static jini_dir = "./";
	private static config_home = "./";

    private static JSK_JAR       = jini_dir + "lib/jsk-lib.jar";
    private static REGGIE_JAR    = jini_dir + "lib/reggie.jar";
    private static OUTRIGGER_JAR = jini_dir + "lib/outrigger.jar";
    private static MAHALO_JAR    = jini_dir + "lib/mahalo.jar";

	private static httpdClasspath       = jini_dir + "lib/classserver.jar" ;
	private static codebaseServingPath  = jini_dir + "lib-dl";

    // Reggie - Lookup Service
    private static reggieCodebase   = codebaseURI + "reggie-dl.jar " + codebaseURI + "jsk-dl.jar ";
    private static reggieClasspath  = REGGIE_JAR;
    private static reggieConfig     = config_home + "reggie.config";

    // Outrigger - Javaspace Service
    private static outriggerCodebase  = codebaseURI + "outrigger-dl.jar " + codebaseURI + "jsk-dl.jar ";
    private static outriggerClasspath = OUTRIGGER_JAR;
    private static outriggerConfig    = config_home + "outrigger.config";

    // Mahalo - Transaction Service
    private static mahaloCodebase   = codebaseURI + "mahalo-dl.jar " + codebaseURI + "jsk-dl.jar ";
    private static mahaloClasspath  = MAHALO_JAR;
    private static mahaloConfig     = config_home + "mahalo.config";


    serviceDescriptors = new ServiceDescriptor[]{
        new NonActivatableServiceDescriptor(
            "",
            policy,
            httpdClasspath,
            "com.sun.jini.tool.ClassServer",
            new String[]{"-port", port, "-dir",
                codebaseServingPath,
                "-verbose"}),

        new NonActivatableServiceDescriptor(
            reggieCodebase,
            policy,
            reggieClasspath,
            "com.sun.jini.reggie.TransientRegistrarImpl",
            new String[] { reggieConfig }),

		new NonActivatableServiceDescriptor(
			mahaloCodebase,
			policy,
			mahaloClasspath,
			"com.sun.jini.mahalo.TransientMahaloImpl",
			new String[] { mahaloConfig }),

		new NonActivatableServiceDescriptor(
			outriggerCodebase,
			policy,
			outriggerClasspath,
			"com.sun.jini.outrigger.TransientOutriggerImpl",
			new String[] { outriggerConfig })
    };
} //end com.sun.jini.start
