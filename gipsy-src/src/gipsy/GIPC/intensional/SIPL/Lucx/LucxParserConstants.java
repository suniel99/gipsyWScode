/* Generated By:JJTree&JavaCC: Do not edit this line. LucxParserConstants.java */
package gipsy.GIPC.intensional.SIPL.Lucx;

public interface LucxParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 6;
  int FORMAL_COMMENT = 7;
  int MULTI_LINE_COMMENT = 8;
  int DIMENSION = 9;
  int END = 10;
  int IF = 11;
  int THEN = 12;
  int ELSE = 13;
  int FI = 14;
  int WHERE = 15;
  int INT = 16;
  int TO = 17;
  int STEP = 18;
  int ORDERED = 19;
  int UNORDERED = 20;
  int FINITE = 21;
  int INFINITE = 22;
  int PERIODIC = 23;
  int NONPERIODIC = 24;
  int ENUMERATED = 25;
  int UPPER = 26;
  int LOWER = 27;
  int PLUSINF = 28;
  int MINUSINF = 29;
  int ASSIGN = 30;
  int GT = 31;
  int LT = 32;
  int EQ = 33;
  int LE = 34;
  int GE = 35;
  int NE = 36;
  int OR = 37;
  int AND = 38;
  int NOT = 39;
  int BITAND = 40;
  int BITOR = 41;
  int PLUS = 42;
  int MINUS = 43;
  int STAR = 44;
  int SLASH = 45;
  int REM = 46;
  int ASA = 47;
  int FBY = 48;
  int UPON = 49;
  int WVR = 50;
  int ISDIMENSIONINCONTEXT = 51;
  int ISTAGINCONTEXT = 52;
  int EXTRACT = 53;
  int OVERRIDE = 54;
  int PROJECT = 55;
  int HIDE = 56;
  int DIFFERENTIATE = 57;
  int SUBSTITUTE = 58;
  int INTERSECT = 59;
  int UNION = 60;
  int CHOOSE = 61;
  int RANGE = 62;
  int DIRECTEDRANGE = 63;
  int ISSUBCONTEXT = 64;
  int ISSUPCONTEXT = 65;
  int COMPARESET = 66;
  int JOIN = 67;
  int FIRST = 68;
  int NEXT = 69;
  int PREV = 70;
  int ISEOD = 71;
  int GETDIM = 72;
  int GETTAG = 73;
  int ISEMPTY = 74;
  int ISBOX = 75;
  int ISSET = 76;
  int AT = 77;
  int WHEN = 78;
  int BOX = 79;
  int EMPTY = 80;
  int INTEGER_LITERAL = 81;
  int DECIMAL_LITERAL = 82;
  int HEX_LITERAL = 83;
  int OCTAL_LITERAL = 84;
  int FLOATING_POINT_LITERAL = 85;
  int EXPONENT = 86;
  int CHARACTER_LITERAL = 87;
  int STRING_LITERAL = 88;
  int ID = 89;
  int LETTER = 90;
  int DIGIT = 91;
  int LPAREN = 92;
  int RPAREN = 93;
  int LBRACKET = 94;
  int RBRACKET = 95;
  int LCURB = 96;
  int RCURB = 97;
  int SEMICOLON = 98;
  int COMMA = 99;
  int DOT = 100;
  int COLON = 101;
  int ILLEGALCHAR = 102;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<FORMAL_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"dimension\"",
    "\"end\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"fi\"",
    "\"where\"",
    "\"int\"",
    "\"to\"",
    "\"step\"",
    "\"ordered\"",
    "\"unordered\"",
    "\"finite\"",
    "\"infinite\"",
    "\"periodic\"",
    "\"nonperiodic\"",
    "\"enumerated\"",
    "\"upper\"",
    "\"lower\"",
    "\"INF+\"",
    "\"INF-\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"or\"",
    "\"and\"",
    "\"not\"",
    "\"&\"",
    "\"|\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"asa\"",
    "\"fby\"",
    "\"upon\"",
    "\"wvr\"",
    "\"\\\\isDimensionInContext\"",
    "\"\\\\isTagInContext\"",
    "\"\\\\extract\"",
    "\"\\\\override\"",
    "\"\\\\project\"",
    "\"\\\\hide\"",
    "\"\\\\differentiate\"",
    "\"\\\\substitute\"",
    "\"\\\\intersect\"",
    "\"\\\\union\"",
    "\"\\\\choose\"",
    "\"\\\\range\"",
    "\"\\\\directedRange\"",
    "\"\\\\isSubContext\"",
    "\"\\\\isSupContext\"",
    "\"\\\\compareSet\"",
    "\"\\\\join\"",
    "\"first\"",
    "\"next\"",
    "\"prev\"",
    "\"iseod\"",
    "\"\\\\getdim\"",
    "\"\\\\gettag\"",
    "\"\\\\isEmpty\"",
    "\"\\\\isBox\"",
    "\"\\\\isSet\"",
    "\"@\"",
    "\"#\"",
    "\"box\"",
    "\"empty\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<ID>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\":\"",
    "<ILLEGALCHAR>",
  };

}
