package gipsy.GIPC.DFG.DFGAnalyzer;

/** Generated By:JJTree: Do not edit this line. SimpleNode.java */

public class SimpleNode extends gipsy.GIPC.intensional.SimpleNode
{
	protected DFGParser oDFGParser;
	
	public SimpleNode(int i) 
	{
		super(i);
	}

	public SimpleNode(DFGParser p, int i) 
	{
		this(i);
		this.oDFGParser = p;
	}

  /** You can override these two methods in subclasses of SimpleNode to
     customize the way the node appears when the tree is dumped.  If
     your output uses more than one line you should override
     toString(String), otherwise overriding toString() is probably all
     you need to do. */

//  public String toString() { return DFGParserTreeConstants.jjtNodeName[id]; }
  public String toString() { // customized

    if(image!=null) {
      return DFGParserTreeConstants.jjtNodeName[id]+" : "+image;
    }
    else {
      return DFGParserTreeConstants.jjtNodeName[id];
    }
}

  /** Override this method if you want to customize how the node dumps
     out its children. */

  public void dump(String prefix) {
    System.out.println(toString(prefix));
    if (children != null) {
      for (int i = 0; i < children.length; ++i) {
	SimpleNode n = (SimpleNode)children[i];
	if (n != null) {
	  n.dump(prefix + " ");
	}
      }
    }
  }
}

